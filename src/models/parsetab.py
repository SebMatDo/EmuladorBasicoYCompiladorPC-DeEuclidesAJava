
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocMENORMAYORleftSUMARESTAleftMULTDIVleftPOTENCIAASIGNAR BOOLEANO CADENA CASO COLON DECIMAL DIFERENTE DIV ENTERO ENTONCES ESCRIBIR FALSO FFUN FMIENTRAS FSI FUN GEQ HACER ID IGUAL LEER LEQ LPAREN MAYOR MENOR MIENTRAS MOD MULT NEGAR NULO NUM_DECIMAL NUM_ENTERO O PCOMA POTENCIA RESTA RPAREN SI SINO SUMA VALOR_CADENA VAR VERDADERO Y\n        algoritmo : FUN proposicion proposiciones FFUN\n        empty :\n        proposicion : asignacion PCOMA\n        | inicializar_variable PCOMA\n        | sentencia_si PCOMA\n        | sentencia_mientras PCOMA\n        | sentencia_hacer_mientras PCOMA\n        | sentencia_leer PCOMA\n        | sentencia_escribir PCOMA\n\n        \n        proposiciones : proposicion proposiciones\n        | empty\n        \n        asignacion : ID ASIGNAR ID\n        | ID ASIGNAR exp_aritmetica\n        | ID ASIGNAR exp_booleana\n        | ID ASIGNAR NULO\n        | ID ASIGNAR VALOR_CADENA\n        \n        tipos : ENTERO\n        | BOOLEANO\n        | DECIMAL\n        | CADENA\n        \n        inicializar_variable : VAR ID COLON tipos\n        \n        operador_aritmetico : MULT\n        | DIV\n        | SUMA\n        | RESTA\n        | POTENCIA\n        \n        factor_aritmetico : NUM_ENTERO\n        | NUM_DECIMAL\n        factor_aritmetico_id : factor_aritmetico\n        | ID\n        \n        operaciones_aritmeticas : operador_aritmetico factor_aritmetico operaciones_aritmeticas\n        | empty\n        \n        operaciones_aritmeticas_id : operador_aritmetico factor_aritmetico_id operaciones_aritmeticas_id\n        | operador_aritmetico factor_aritmetico_id\n        \n        termino_aritmetico : factor_aritmetico operaciones_aritmeticas\n        | ID operaciones_aritmeticas_id\n        | factor_aritmetico operaciones_aritmeticas_id\n        \n        exp_aritmetica : termino_aritmetico\n        | termino_aritmetico operador_aritmetico exp_aritmetica\n        \n        operador_relacional : IGUAL\n        | DIFERENTE\n        | LEQ\n        | GEQ\n        | MENOR\n        | MAYOR\n        \n        factor_relacional : LPAREN factor_relacional RPAREN\n        | exp_aritmetica operador_relacional exp_aritmetica\n        | ID operador_relacional exp_aritmetica\n        | exp_aritmetica operador_relacional ID\n        | ID operador_relacional ID\n        \n        operador_booleano : IGUAL\n        | DIFERENTE\n        | Y\n        | O\n        \n        factor_booleano : LPAREN exp_booleana RPAREN\n        | VERDADERO\n        | FALSO\n        | factor_relacional\n        | NEGAR factor_booleano\n        factor_booleano_id : factor_booleano\n        | ID\n        | NEGAR ID\n        \n        operaciones_booleanas : operador_booleano factor_booleano operaciones_booleanas\n        | empty\n        operaciones_booleanas_id : operador_booleano factor_booleano_id operaciones_booleanas_id\n        | empty\n        \n        termino_booleano : factor_booleano operaciones_booleanas\n        | ID operador_booleano factor_booleano_id operaciones_booleanas_id\n        | NEGAR ID operaciones_booleanas_id\n        \n        exp_booleana : termino_booleano\n        | termino_booleano operador_booleano exp_booleana\n        \n        sentencia_si : SI exp_booleana ENTONCES proposicion proposiciones FSI\n        | SI exp_booleana ENTONCES proposicion proposiciones SINO proposicion proposiciones FSI\n        \n        sentencia_mientras : MIENTRAS exp_booleana HACER proposicion proposiciones FMIENTRAS\n        \n        sentencia_hacer_mientras : HACER proposicion proposiciones MIENTRAS exp_booleana\n        \n        sentencia_leer : LEER LPAREN ID RPAREN\n        \n        sentencia_escribir :  ESCRIBIR LPAREN ID RPAREN\n        '
    
_lr_action_items = {'FUN':([0,],[2,]),'$end':([1,49,],[0,-1,]),'ID':([2,3,12,13,14,15,18,21,22,23,24,25,26,27,28,34,35,45,46,47,56,57,58,59,60,61,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,83,87,88,89,90,93,95,104,111,118,120,121,129,130,144,148,],[11,11,29,33,33,11,11,-3,-4,-5,-6,-7,-8,-9,50,81,86,11,97,98,11,33,-51,-52,-53,-54,107,108,112,-40,-41,-42,-43,-44,-45,116,-22,-23,-24,-25,-26,107,86,125,-40,-41,127,116,11,11,136,108,-40,-41,11,33,11,11,]),'VAR':([2,3,15,18,21,22,23,24,25,26,27,45,56,95,104,129,144,148,],[12,12,12,12,-3,-4,-5,-6,-7,-8,-9,12,12,12,12,12,12,12,]),'SI':([2,3,15,18,21,22,23,24,25,26,27,45,56,95,104,129,144,148,],[13,13,13,13,-3,-4,-5,-6,-7,-8,-9,13,13,13,13,13,13,13,]),'MIENTRAS':([2,3,15,18,20,21,22,23,24,25,26,27,45,48,56,95,96,104,129,144,148,],[14,14,14,14,-11,-3,-4,-5,-6,-7,-8,-9,14,-10,14,14,130,14,14,14,14,]),'HACER':([2,3,15,18,21,22,23,24,25,26,27,31,32,36,37,38,40,41,42,43,44,45,56,62,64,67,81,82,91,92,94,95,104,105,106,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,129,134,135,136,137,138,140,144,145,146,148,],[15,15,15,15,-3,-4,-5,-6,-7,-8,-9,-70,-2,-56,-57,-58,-38,-2,-27,-28,95,15,15,-67,-64,-36,-2,-59,-35,-37,-32,15,15,-71,-2,-61,-2,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,15,-63,-68,-62,-33,-2,-31,15,-65,-2,15,]),'LEER':([2,3,15,18,21,22,23,24,25,26,27,45,56,95,104,129,144,148,],[16,16,16,16,-3,-4,-5,-6,-7,-8,-9,16,16,16,16,16,16,16,]),'ESCRIBIR':([2,3,15,18,21,22,23,24,25,26,27,45,56,95,104,129,144,148,],[17,17,17,17,-3,-4,-5,-6,-7,-8,-9,17,17,17,17,17,17,17,]),'FFUN':([3,18,19,20,21,22,23,24,25,26,27,48,],[-2,-2,49,-11,-3,-4,-5,-6,-7,-8,-9,-10,]),'PCOMA':([4,5,6,7,8,9,10,31,32,36,37,38,40,41,42,43,50,51,52,53,54,62,64,67,81,82,91,92,94,99,100,101,102,103,105,106,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,131,132,134,135,136,137,138,140,142,143,145,146,147,150,],[21,22,23,24,25,26,27,-70,-2,-56,-57,-58,-38,-2,-27,-28,-12,-13,-14,-15,-16,-67,-64,-36,-2,-59,-35,-37,-32,-21,-17,-18,-19,-20,-71,-2,-61,-2,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-76,-77,-63,-68,-62,-33,-2,-31,-75,-72,-65,-2,-74,-73,]),'ASIGNAR':([11,],[28,]),'NEGAR':([13,14,28,34,35,57,58,59,60,61,63,65,68,69,80,83,111,118,120,121,130,],[34,34,34,80,34,34,-51,-52,-53,-54,80,111,-51,-52,80,34,80,111,-51,-52,34,]),'LPAREN':([13,14,16,17,28,34,35,57,58,59,60,61,63,65,68,69,80,83,111,118,120,121,130,],[35,35,46,47,35,35,83,35,-51,-52,-53,-54,35,35,-51,-52,35,83,35,35,-51,-52,35,]),'VERDADERO':([13,14,28,34,35,57,58,59,60,61,63,65,68,69,80,83,111,118,120,121,130,],[36,36,36,36,36,36,-51,-52,-53,-54,36,36,-51,-52,36,36,36,36,-51,-52,36,]),'FALSO':([13,14,28,34,35,57,58,59,60,61,63,65,68,69,80,83,111,118,120,121,130,],[37,37,37,37,37,37,-51,-52,-53,-54,37,37,-51,-52,37,37,37,37,-51,-52,37,]),'NUM_ENTERO':([13,14,28,34,35,57,58,59,60,61,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,83,87,88,89,90,93,111,118,120,121,130,139,],[42,42,42,42,42,42,-51,-52,-53,-54,42,42,42,-40,-41,-42,-43,-44,-45,42,-22,-23,-24,-25,-26,42,42,42,-40,-41,42,42,42,42,-40,-41,42,42,]),'NUM_DECIMAL':([13,14,28,34,35,57,58,59,60,61,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,83,87,88,89,90,93,111,118,120,121,130,139,],[43,43,43,43,43,43,-51,-52,-53,-54,43,43,43,-40,-41,-42,-43,-44,-45,43,-22,-23,-24,-25,-26,43,43,43,-40,-41,43,43,43,43,-40,-41,43,43,]),'FSI':([18,20,21,22,23,24,25,26,27,48,104,133,148,149,],[-2,-11,-3,-4,-5,-6,-7,-8,-9,-10,-2,143,-2,150,]),'SINO':([18,20,21,22,23,24,25,26,27,48,104,133,],[-2,-11,-3,-4,-5,-6,-7,-8,-9,-10,-2,144,]),'FMIENTRAS':([18,20,21,22,23,24,25,26,27,48,129,141,],[-2,-11,-3,-4,-5,-6,-7,-8,-9,-10,-2,147,]),'NULO':([28,],[53,]),'VALOR_CADENA':([28,],[54,]),'COLON':([29,],[55,]),'ENTONCES':([30,31,32,36,37,38,40,41,42,43,62,64,67,81,82,91,92,94,105,106,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,134,135,136,137,138,140,145,146,],[56,-70,-2,-56,-57,-58,-38,-2,-27,-28,-67,-64,-36,-2,-59,-35,-37,-32,-71,-2,-61,-2,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-63,-68,-62,-33,-2,-31,-65,-2,]),'RPAREN':([31,32,36,37,38,40,41,42,43,62,64,67,81,82,84,85,91,92,94,97,98,105,106,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,134,135,136,137,138,140,145,146,],[-70,-2,-56,-57,-58,-38,-2,-27,-28,-67,-64,-36,-2,-59,122,123,-35,-37,-32,131,132,-71,-2,-61,-2,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-63,-68,-62,-33,-2,-31,-65,-2,]),'IGUAL':([31,32,33,36,37,38,39,40,41,42,43,50,51,62,64,67,81,82,85,86,91,92,94,106,107,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,134,135,136,137,138,140,145,146,],[58,58,68,-56,-57,-58,88,-38,-2,-27,-28,68,88,-67,-64,-36,120,-59,-58,120,-35,-37,-32,58,88,88,58,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-63,-68,88,-33,58,-31,-65,-2,]),'DIFERENTE':([31,32,33,36,37,38,39,40,41,42,43,50,51,62,64,67,81,82,85,86,91,92,94,106,107,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,134,135,136,137,138,140,145,146,],[59,59,69,-56,-57,-58,89,-38,-2,-27,-28,69,89,-67,-64,-36,121,-59,-58,121,-35,-37,-32,59,89,89,59,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-63,-68,89,-33,59,-31,-65,-2,]),'Y':([31,32,33,36,37,38,40,41,42,43,50,62,64,67,81,82,85,86,91,92,94,106,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,134,135,136,137,138,140,145,146,],[60,60,60,-56,-57,-58,-38,-2,-27,-28,60,-67,-64,-36,60,-59,-58,60,-35,-37,-32,60,-61,60,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-63,-68,-62,-33,60,-31,-65,-2,]),'O':([31,32,33,36,37,38,40,41,42,43,50,62,64,67,81,82,85,86,91,92,94,106,108,109,110,112,113,114,115,116,117,119,122,123,124,125,126,128,134,135,136,137,138,140,145,146,],[61,61,61,-56,-57,-58,-38,-2,-27,-28,61,-67,-64,-36,61,-59,-58,61,-35,-37,-32,61,-61,61,-60,-50,-48,-34,-29,-30,-69,-66,-55,-46,-47,-49,-39,-2,-63,-68,-62,-33,61,-31,-65,-2,]),'LEQ':([33,39,40,41,42,43,50,51,67,81,86,91,92,94,107,108,114,115,116,126,128,136,137,140,146,],[70,70,-38,-2,-27,-28,70,70,-36,70,70,-35,-37,-32,70,70,-34,-29,-30,-39,-2,70,-33,-31,-2,]),'GEQ':([33,39,40,41,42,43,50,51,67,81,86,91,92,94,107,108,114,115,116,126,128,136,137,140,146,],[71,71,-38,-2,-27,-28,71,71,-36,71,71,-35,-37,-32,71,71,-34,-29,-30,-39,-2,71,-33,-31,-2,]),'MENOR':([33,39,40,41,42,43,50,51,67,81,86,91,92,94,107,108,114,115,116,126,128,136,137,140,146,],[72,72,-38,-2,-27,-28,72,72,-36,72,72,-35,-37,-32,72,72,-34,-29,-30,-39,-2,72,-33,-31,-2,]),'MAYOR':([33,39,40,41,42,43,50,51,67,81,86,91,92,94,107,108,114,115,116,126,128,136,137,140,146,],[73,73,-38,-2,-27,-28,73,73,-36,73,73,-35,-37,-32,73,73,-34,-29,-30,-39,-2,73,-33,-31,-2,]),'MULT':([33,40,41,42,43,50,67,81,86,91,92,94,107,108,112,114,115,116,125,127,128,136,137,140,146,],[75,75,75,-27,-28,75,-36,75,75,-35,-37,-32,75,75,75,75,-29,-30,75,75,75,75,-33,-31,75,]),'DIV':([33,40,41,42,43,50,67,81,86,91,92,94,107,108,112,114,115,116,125,127,128,136,137,140,146,],[76,76,76,-27,-28,76,-36,76,76,-35,-37,-32,76,76,76,76,-29,-30,76,76,76,76,-33,-31,76,]),'SUMA':([33,40,41,42,43,50,67,81,86,91,92,94,107,108,112,114,115,116,125,127,128,136,137,140,146,],[77,77,77,-27,-28,77,-36,77,77,-35,-37,-32,77,77,77,77,-29,-30,77,77,77,77,-33,-31,77,]),'RESTA':([33,40,41,42,43,50,67,81,86,91,92,94,107,108,112,114,115,116,125,127,128,136,137,140,146,],[78,78,78,-27,-28,78,-36,78,78,-35,-37,-32,78,78,78,78,-29,-30,78,78,78,78,-33,-31,78,]),'POTENCIA':([33,40,41,42,43,50,67,81,86,91,92,94,107,108,112,114,115,116,125,127,128,136,137,140,146,],[79,79,79,-27,-28,79,-36,79,79,-35,-37,-32,79,79,79,79,-29,-30,79,79,79,79,-33,-31,79,]),'ENTERO':([55,],[100,]),'BOOLEANO':([55,],[101,]),'DECIMAL':([55,],[102,]),'CADENA':([55,],[103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'algoritmo':([0,],[1,]),'proposicion':([2,3,15,18,45,56,95,104,129,144,148,],[3,18,45,18,18,104,129,18,18,148,18,]),'asignacion':([2,3,15,18,45,56,95,104,129,144,148,],[4,4,4,4,4,4,4,4,4,4,4,]),'inicializar_variable':([2,3,15,18,45,56,95,104,129,144,148,],[5,5,5,5,5,5,5,5,5,5,5,]),'sentencia_si':([2,3,15,18,45,56,95,104,129,144,148,],[6,6,6,6,6,6,6,6,6,6,6,]),'sentencia_mientras':([2,3,15,18,45,56,95,104,129,144,148,],[7,7,7,7,7,7,7,7,7,7,7,]),'sentencia_hacer_mientras':([2,3,15,18,45,56,95,104,129,144,148,],[8,8,8,8,8,8,8,8,8,8,8,]),'sentencia_leer':([2,3,15,18,45,56,95,104,129,144,148,],[9,9,9,9,9,9,9,9,9,9,9,]),'sentencia_escribir':([2,3,15,18,45,56,95,104,129,144,148,],[10,10,10,10,10,10,10,10,10,10,10,]),'proposiciones':([3,18,45,104,129,148,],[19,48,96,133,141,149,]),'empty':([3,18,32,41,45,81,104,106,109,128,129,138,146,148,],[20,20,64,94,20,119,20,64,119,94,20,119,94,20,]),'exp_booleana':([13,14,28,35,57,83,130,],[30,44,52,84,105,84,142,]),'termino_booleano':([13,14,28,35,57,83,130,],[31,31,31,31,31,31,31,]),'factor_booleano':([13,14,28,34,35,57,63,65,80,83,111,118,130,],[32,32,32,82,32,32,106,110,82,32,82,110,32,]),'factor_relacional':([13,14,28,34,35,57,63,65,80,83,111,118,130,],[38,38,38,38,85,38,38,38,38,85,38,38,38,]),'exp_aritmetica':([13,14,28,34,35,57,63,65,66,80,83,87,90,111,118,130,],[39,39,51,39,39,39,39,39,113,39,39,124,126,39,39,39,]),'termino_aritmetico':([13,14,28,34,35,57,63,65,66,80,83,87,90,111,118,130,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'factor_aritmetico':([13,14,28,34,35,57,63,65,66,74,80,83,87,90,93,111,118,130,139,],[41,41,41,41,41,41,41,41,41,115,41,41,41,41,128,41,41,41,146,]),'operador_booleano':([31,32,33,50,81,86,106,109,138,],[57,63,65,65,118,65,63,118,118,]),'operaciones_booleanas':([32,106,],[62,134,]),'operador_relacional':([33,39,50,51,81,86,107,108,136,],[66,87,66,87,66,66,66,66,66,]),'operaciones_aritmeticas_id':([33,41,50,81,86,107,108,112,114,125,127,136,],[67,92,67,67,67,67,67,67,137,67,67,67,]),'operador_aritmetico':([33,40,41,50,81,86,107,108,112,114,125,127,128,136,146,],[74,90,93,74,74,74,74,74,74,74,74,74,139,74,139,]),'operaciones_aritmeticas':([41,128,146,],[91,140,140,]),'tipos':([55,],[99,]),'factor_booleano_id':([65,118,],[109,138,]),'factor_aritmetico_id':([74,93,],[114,114,]),'operaciones_booleanas_id':([81,109,138,],[117,135,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> algoritmo","S'",1,None,None,None),
  ('algoritmo -> FUN proposicion proposiciones FFUN','algoritmo',4,'p_algoritmo','Parser.py',35),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',43),
  ('proposicion -> asignacion PCOMA','proposicion',2,'p_proposicion','Parser.py',50),
  ('proposicion -> inicializar_variable PCOMA','proposicion',2,'p_proposicion','Parser.py',51),
  ('proposicion -> sentencia_si PCOMA','proposicion',2,'p_proposicion','Parser.py',52),
  ('proposicion -> sentencia_mientras PCOMA','proposicion',2,'p_proposicion','Parser.py',53),
  ('proposicion -> sentencia_hacer_mientras PCOMA','proposicion',2,'p_proposicion','Parser.py',54),
  ('proposicion -> sentencia_leer PCOMA','proposicion',2,'p_proposicion','Parser.py',55),
  ('proposicion -> sentencia_escribir PCOMA','proposicion',2,'p_proposicion','Parser.py',56),
  ('proposiciones -> proposicion proposiciones','proposiciones',2,'p_proposiciones','Parser.py',66),
  ('proposiciones -> empty','proposiciones',1,'p_proposiciones','Parser.py',67),
  ('asignacion -> ID ASIGNAR ID','asignacion',3,'p_asignacion','Parser.py',75),
  ('asignacion -> ID ASIGNAR exp_aritmetica','asignacion',3,'p_asignacion','Parser.py',76),
  ('asignacion -> ID ASIGNAR exp_booleana','asignacion',3,'p_asignacion','Parser.py',77),
  ('asignacion -> ID ASIGNAR NULO','asignacion',3,'p_asignacion','Parser.py',78),
  ('asignacion -> ID ASIGNAR VALOR_CADENA','asignacion',3,'p_asignacion','Parser.py',79),
  ('tipos -> ENTERO','tipos',1,'p_tipos','Parser.py',98),
  ('tipos -> BOOLEANO','tipos',1,'p_tipos','Parser.py',99),
  ('tipos -> DECIMAL','tipos',1,'p_tipos','Parser.py',100),
  ('tipos -> CADENA','tipos',1,'p_tipos','Parser.py',101),
  ('inicializar_variable -> VAR ID COLON tipos','inicializar_variable',4,'p_inicializar_variable','Parser.py',108),
  ('operador_aritmetico -> MULT','operador_aritmetico',1,'p_operador_aritmetico','Parser.py',130),
  ('operador_aritmetico -> DIV','operador_aritmetico',1,'p_operador_aritmetico','Parser.py',131),
  ('operador_aritmetico -> SUMA','operador_aritmetico',1,'p_operador_aritmetico','Parser.py',132),
  ('operador_aritmetico -> RESTA','operador_aritmetico',1,'p_operador_aritmetico','Parser.py',133),
  ('operador_aritmetico -> POTENCIA','operador_aritmetico',1,'p_operador_aritmetico','Parser.py',134),
  ('factor_aritmetico -> NUM_ENTERO','factor_aritmetico',1,'p_factor_aritmetico','Parser.py',143),
  ('factor_aritmetico -> NUM_DECIMAL','factor_aritmetico',1,'p_factor_aritmetico','Parser.py',144),
  ('factor_aritmetico_id -> factor_aritmetico','factor_aritmetico_id',1,'p_factor_aritmetico','Parser.py',145),
  ('factor_aritmetico_id -> ID','factor_aritmetico_id',1,'p_factor_aritmetico','Parser.py',146),
  ('operaciones_aritmeticas -> operador_aritmetico factor_aritmetico operaciones_aritmeticas','operaciones_aritmeticas',3,'p_operaciones_aritmeticas','Parser.py',160),
  ('operaciones_aritmeticas -> empty','operaciones_aritmeticas',1,'p_operaciones_aritmeticas','Parser.py',161),
  ('operaciones_aritmeticas_id -> operador_aritmetico factor_aritmetico_id operaciones_aritmeticas_id','operaciones_aritmeticas_id',3,'p_operaciones_aritmeticas_id','Parser.py',204),
  ('operaciones_aritmeticas_id -> operador_aritmetico factor_aritmetico_id','operaciones_aritmeticas_id',2,'p_operaciones_aritmeticas_id','Parser.py',205),
  ('termino_aritmetico -> factor_aritmetico operaciones_aritmeticas','termino_aritmetico',2,'p_termino_aritmetico','Parser.py',252),
  ('termino_aritmetico -> ID operaciones_aritmeticas_id','termino_aritmetico',2,'p_termino_aritmetico','Parser.py',253),
  ('termino_aritmetico -> factor_aritmetico operaciones_aritmeticas_id','termino_aritmetico',2,'p_termino_aritmetico','Parser.py',254),
  ('exp_aritmetica -> termino_aritmetico','exp_aritmetica',1,'p_exp_arimetica','Parser.py',275),
  ('exp_aritmetica -> termino_aritmetico operador_aritmetico exp_aritmetica','exp_aritmetica',3,'p_exp_arimetica','Parser.py',276),
  ('operador_relacional -> IGUAL','operador_relacional',1,'p_operador_relacional','Parser.py',291),
  ('operador_relacional -> DIFERENTE','operador_relacional',1,'p_operador_relacional','Parser.py',292),
  ('operador_relacional -> LEQ','operador_relacional',1,'p_operador_relacional','Parser.py',293),
  ('operador_relacional -> GEQ','operador_relacional',1,'p_operador_relacional','Parser.py',294),
  ('operador_relacional -> MENOR','operador_relacional',1,'p_operador_relacional','Parser.py',295),
  ('operador_relacional -> MAYOR','operador_relacional',1,'p_operador_relacional','Parser.py',296),
  ('factor_relacional -> LPAREN factor_relacional RPAREN','factor_relacional',3,'p_factor_relacional','Parser.py',303),
  ('factor_relacional -> exp_aritmetica operador_relacional exp_aritmetica','factor_relacional',3,'p_factor_relacional','Parser.py',304),
  ('factor_relacional -> ID operador_relacional exp_aritmetica','factor_relacional',3,'p_factor_relacional','Parser.py',305),
  ('factor_relacional -> exp_aritmetica operador_relacional ID','factor_relacional',3,'p_factor_relacional','Parser.py',306),
  ('factor_relacional -> ID operador_relacional ID','factor_relacional',3,'p_factor_relacional','Parser.py',307),
  ('operador_booleano -> IGUAL','operador_booleano',1,'p_operador_booleano','Parser.py',316),
  ('operador_booleano -> DIFERENTE','operador_booleano',1,'p_operador_booleano','Parser.py',317),
  ('operador_booleano -> Y','operador_booleano',1,'p_operador_booleano','Parser.py',318),
  ('operador_booleano -> O','operador_booleano',1,'p_operador_booleano','Parser.py',319),
  ('factor_booleano -> LPAREN exp_booleana RPAREN','factor_booleano',3,'p_factor_booleano','Parser.py',325),
  ('factor_booleano -> VERDADERO','factor_booleano',1,'p_factor_booleano','Parser.py',326),
  ('factor_booleano -> FALSO','factor_booleano',1,'p_factor_booleano','Parser.py',327),
  ('factor_booleano -> factor_relacional','factor_booleano',1,'p_factor_booleano','Parser.py',328),
  ('factor_booleano -> NEGAR factor_booleano','factor_booleano',2,'p_factor_booleano','Parser.py',329),
  ('factor_booleano_id -> factor_booleano','factor_booleano_id',1,'p_factor_booleano','Parser.py',330),
  ('factor_booleano_id -> ID','factor_booleano_id',1,'p_factor_booleano','Parser.py',331),
  ('factor_booleano_id -> NEGAR ID','factor_booleano_id',2,'p_factor_booleano','Parser.py',332),
  ('operaciones_booleanas -> operador_booleano factor_booleano operaciones_booleanas','operaciones_booleanas',3,'p_operaciones_booleanas','Parser.py',339),
  ('operaciones_booleanas -> empty','operaciones_booleanas',1,'p_operaciones_booleanas','Parser.py',340),
  ('operaciones_booleanas_id -> operador_booleano factor_booleano_id operaciones_booleanas_id','operaciones_booleanas_id',3,'p_operaciones_booleanas','Parser.py',341),
  ('operaciones_booleanas_id -> empty','operaciones_booleanas_id',1,'p_operaciones_booleanas','Parser.py',342),
  ('termino_booleano -> factor_booleano operaciones_booleanas','termino_booleano',2,'p_termino_booleano','Parser.py',349),
  ('termino_booleano -> ID operador_booleano factor_booleano_id operaciones_booleanas_id','termino_booleano',4,'p_termino_booleano','Parser.py',350),
  ('termino_booleano -> NEGAR ID operaciones_booleanas_id','termino_booleano',3,'p_termino_booleano','Parser.py',351),
  ('exp_booleana -> termino_booleano','exp_booleana',1,'p_exp_booleana','Parser.py',358),
  ('exp_booleana -> termino_booleano operador_booleano exp_booleana','exp_booleana',3,'p_exp_booleana','Parser.py',359),
  ('sentencia_si -> SI exp_booleana ENTONCES proposicion proposiciones FSI','sentencia_si',6,'p_sentencia_si','Parser.py',368),
  ('sentencia_si -> SI exp_booleana ENTONCES proposicion proposiciones SINO proposicion proposiciones FSI','sentencia_si',9,'p_sentencia_si','Parser.py',369),
  ('sentencia_mientras -> MIENTRAS exp_booleana HACER proposicion proposiciones FMIENTRAS','sentencia_mientras',6,'p_sentencia_mientras','Parser.py',375),
  ('sentencia_hacer_mientras -> HACER proposicion proposiciones MIENTRAS exp_booleana','sentencia_hacer_mientras',5,'p_sentencia_hacer_mientras','Parser.py',381),
  ('sentencia_leer -> LEER LPAREN ID RPAREN','sentencia_leer',4,'p_sentencia_leer','Parser.py',387),
  ('sentencia_escribir -> ESCRIBIR LPAREN ID RPAREN','sentencia_escribir',4,'p_sentencia_escribir','Parser.py',393),
]
